
call pathogen#infect()

" map ,mz :write !mzscheme	" pro scheme - spise zbytecne
"map <F2> a<C-R>=strftime("%c")<CR><Esc>		" na F2 vlozi aktualni datum/cas
" previous tab
map <F5> gT
map! <F5> gT
" next tab
map <F6> gt
map! <F6> gt

map , gT
map ; gt

"map <F2> :w\|!./main.py<CR>
map <F2> :w\|!./main.*<CR>

map <F4> :Gstatus<CR>
map! <F4> :Gstatus<CR>

"map <F4> :sort \| w<CR>Go

" rails - jump to alternative
" map <F7> :AT<CR><Esc>
" rails - jump to relative
"map <F8> :RT<CR><Esc>

" open file-path under cursor in new tab
" - remap default gf to new-window,
" - map on F8 also
map gf :tabe <cfile><CR>
map <F8> gf
map! <F8> gf

map <F12> :clo<CR>
map! <F12> :clo<CR>


" OF - quick find file / open buffer
"nnoremap t :call OF()<CR>
"nmap <leader>rci :%!ruby-code-indenter<cr>

set nocompatible
set ttyfast

set noeb		" zadny error-bell ani visual-bell  ->> blee :)
set vb			" aktivuje pouze visual-bell

set mps={:},(:),[:]		" ktere zavorky zvyraznovat
set showmatch			" zapnuti zvyraznovani zavorek

set foldmethod=indent
set foldminlines=1
"set foldcolumn=4
set foldlevel=1
set foldnestmax=7

set background=dark     " tmave pozadi ;)
colorscheme queria

set backspace=indent,eol,start
set tabstop=4   " kolik mezer zabira <Tab>
set shiftwidth=4        " kolik mezer tvori jeden krok indentu
set nosta       " no smarttab - nepouzivat 'shiftwidth' (mezery pro ind noveho radku)
set softtabstop=0       " kolik mezer misto skutecneho <Tabu> //0->nepouzivat!
set noet        " no expandtab - nemenit <Tab> v Insert modu na mezery!

set virtualedit=block

" automaticke odsazovani
set autoindent
set smartindent

" zpusob nabizeni doplnovani (seznamem)
set wildmode=list:longest

set history=50
set ruler       " zobraz pozici kurzoru ve status radku
set showcmd     " zobrazovat neuplne prikazy a klaves. zkratky
set incsearch
set nowrap      " nezalamovat text
set wrapscan    " hledani prochazi skrz konec souboru na zacatek
set ignorecase
set smartcase   " hledani case-insensitive pokud nezadam velka pismena
set scrolloff=16 " skroluj radky nad/pod kurzorem navic
set sidescrolloff=18     " skroluj sloupce pred/za kurzorem navic
set number      " cisla radku
" set numberwidth=3       " kolik sloupcu na cisla radku

set nosb        " splitovane okno dole, nove nahore
set showmode    " zobrazovat 'mod' ve stavovem radku

set nobackup

set mouse=a

if has("vms")
	set nowritebackup
else
	set writebackup
endif

" map Q gq " netusim k cemu je tohle dobre :D v ruby-on-rails to
" nadela poradny bordel

" syntax hlighting colors and search highlight
if &t_Co > 2 || has("gui_running")
	syntax on
	set hlsearch
endif

" z vychoziho gentoo configu (zvyrazovani syntaxe atd)
if has("autocmd")
	filetype plugin on
	filetype indent on

	augroup vimrcEx
		au!
	
	autocmd FileType text setlocal textwidth=78

	autocmd BufReadPost *
	\ if line("'\"") > 0 && line("'\"") <= line("$") |
	\	exe "normal g'\"" |
	\ endif

	augroup END
endif " has("autocmd")

" pozaduje nainstalovanou enca
function GetEncoding(f)
	"system('enca -L czech -Pe "' . a:f . '" > /tmp/et')
	"echo a:f
	"sleep 1
	let e = system('enca -L czech -Pe "' . a:f . '"')
	let e = substitute(e, '/.*', '', '')
	if e =~ 'unknown'
		return 'ascii'
	endif
	"echo e
	"sleep 1
	return e
	"return 'ASCII'
endfunc

"let g:ruby_path = '/usr/lib/ruby/site_ruby/1.8,/usr/lib/ruby/site_ruby/1.8/i686-linux,/usr/lib/ruby/site_ruby,/usr/lib/ruby/vendor_ruby/1.8,/usr/lib/ruby/vendor_ruby/1.8/i686-linux,/usr/lib/ruby/vendor_ruby,/usr/lib/ruby/1.8,/usr/lib/ruby/1.8/i686-linux,.,/home/queria/.gem/ruby/1.8/gems/bundler-1.0.21/lib,/usr/lib/ruby/gems/1.8/gems/activerecord-2.3.11/lib,/usr/lib/ruby/gems/1.8/gems/activesupport-2.3.11/lib,/usr/lib/ruby/gems/1.8/gems/builder-2.1.2/lib,/usr/lib/ruby/gems/1.8/gems/i18n-0.4.2/lib,/usr/lib/ruby/gems/1.8/gems/sqlite3-1.3.3/lib,/usr/lib/ruby/gems/1.8/gems/tzinfo-0.3.29/lib'

" automaticke prekodovani souboru dle detekce z enca
au BufReadPre * exec "set fencs=".GetEncoding(expand(expand("<afile>:p")))
"set fileencodings=ucs-bom,utf-8,default,latin1

"au BufReadPre * exec "set enc=utf-8"
"au BufReadPre * exec "set fenc=utf-8"
"au BufReadPre * exec "set tenc=utf-8"

set showtabline=2 " zobrazovat radek se zalozkami (taby) porad (:help 'showtabline')

" ActionScript association
au BufNewFile,BufRead *.as	set filetype=actionscript
au BufNewFile,BufRead *.as	set fenc=utf-8
au BufNewFile,BufRead *.as	set bomb
au BufNewFile,BufRead *.as	set foldmethod=indent
au BufNewFile,BufRead *.as	set foldlevel=2
au BufNewFile,BufRead *.as	set foldnestmax=3

au BufNewFile,BufRead *.mxml set filetype=actionscript
au BufNewFile,BufRead *.mxml set expandtab
au BufNewFile,BufRead *.mxml set shiftwidth=2
au BufNewFile,BufRead *.mxml set tabstop=2
au BufNewFile,BufRead *.mxml let g:mxml_syntax_folding = 1

"au BufNewFile,BufRead *.rb	set foldlevel=1
au BufNewFile,BufRead *.rb	set foldmethod=syntax


au BufNewFile,BufRead *.php setlocal ai

" Mako templates
au BufNewFile,BufRead *.mak	set filetype=xhtml

" JavaScript Flash
au BufNewFile,BufRead *.jsfl	set filetype=javascript

au BufNewFile,BufRead *.rb  set filetype=eruby

"au WinLeave * set nocursorline
"au WinEnter * set cursorline
"set cursorline nocursorcolumn

set directory=~/.vim/swp/
set tabpagemax=30

"highlight CursorLine term=underline cterm=none ctermbg=4

